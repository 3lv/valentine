rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }


    // Default rule - deny all access
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // If you later add profile pictures or couple photos
    match /users/{userId}/profile/{fileName} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.uid == userId &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB max
        request.resource.contentType.matches('image/.*'); // Only images
    }
    
    match /couples/{coupleId}/backgrounds/{fileName} {
      allow read, write: if 
        // Allow access for authenticated users with matching coupleId
        (isSignedIn() && request.auth.token.coupleId == coupleId) ||
        // Allow access for API requests with valid API key
        (
          request.headers.hasAll(['x-api-key']) &&
          exists(/databases/$(database)/documents/couples/$(coupleId)) &&
          get(/databases/$(database)/documents/couples/$(coupleId)).data.apiKeys.hasAny([{'key': request.headers['x-api-key']}])
        );
    }
  }
}
